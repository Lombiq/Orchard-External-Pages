@model OrchardHUN.ExternalPages.Models.BitbucketRepositoryDataRecord
@using OrchardHUN.ExternalPages.Models

<fieldset class="orchardhun-external-pages-bitbucket-repository-settings">
    <legend>
        @if (!String.IsNullOrEmpty(Model.AccountName))
        {
            @Model.AccountName<text>/</text>@Model.Slug
        }
        else
        {
            @T("New repository")
        }
    </legend>
    <div>
        @Html.HiddenFor(m => m.Id)
        @if (Model.Id != 0)
        {
            @Html.ActionLink(T("Delete repository").Text, "DeleteRepository", "BitbucketAdmin", new { Area = "OrchardHUN.ExternalPages", Id = Model.Id, ReturnUrl = Context.Request.RawUrl }, new { itemprop = "RemoveUrl UnsafeUrl", @class = "button" })
            <span class="hint">@T("Deleting the repository only prevents further updating but all the existing local data remains.")</span>
            @Html.ActionLink(T("Repopulate").Text, "RepopulateRepository", "BitbucketAdmin", new { Area = "OrchardHUN.ExternalPages", Id = Model.Id, ReturnUrl = Context.Request.RawUrl }, new { itemprop = "UnsafeUrl", @class = "button" })
            if (!Model.WasChecked())
            {
                <span class="hint">@T("This repository wasn't populated yet.")</span>
            }
            <span class="hint">@T("Bypassing changeset processing you can force a repopulation of the local storage from the repository. Make sure to set up url mappings properly first. Before this initial population the repository's content won't be pulled in so clicking this is necessary before the content will be auto-updated.")</span>
            if (Model.WasProcessed())
            {
                @T("Open root urls:")
                <ul>
                    @foreach (var mapping in Model.UrlMappings())
                    {
                        var remoteUrl = "/" + mapping.RepoPath;
                        var localUrl = Url.Content("~/" + mapping.LocalPath + "/");
                        @Html.Link(remoteUrl + ": " + localUrl, localUrl)
                    }
                </ul>
            }
        }
        <ol>
            <li>
                @Html.LabelFor(m => m.AccountName, T("Account name"))
                @Html.TextBoxFor(m => m.AccountName, new { @class = "text singleline" })
                @Html.ValidationMessageFor(m => m.AccountName)
            </li>
            <li>
                @Html.LabelFor(m => m.Slug, T("Slug"))
                @Html.TextBoxFor(m => m.Slug, new { @class = "text singleline" })
                @Html.ValidationMessageFor(m => m.Slug)
            </li>
            <li>
                @Html.LabelFor(m => m.Username, T("Username"))
                @Html.TextBoxFor(m => m.Username, new { @class = "text singleline" })
                @Html.ValidationMessageFor(m => m.Username)
            </li>
            <li>
                @Html.LabelFor(m => m.Password, T("Password"))
                @Html.PasswordFor(m => m.Password, new { @class = "text singleline" })
                @Html.ValidationMessageFor(m => m.Password)
            </li>
            <li>
                @Html.EditorFor(m => m.MirrorFiles)
                <label for="@Html.FieldIdFor(m => m.MirrorFiles)" class="forcheckbox">@T("Mirror files")</label>
                @Html.ValidationMessageFor(m => m.MirrorFiles)
            </li>
            <li>
                @Html.LabelFor(m => m.MaximalFileSizeKB, T("Maximal file size (in KB)"))
                @Html.TextBoxFor(m => m.MaximalFileSizeKB, new { @class = "text-small" })
                @Html.ValidationMessageFor(m => m.MaximalFileSizeKB)
            </li>
            <li>
                @Html.LabelFor(m => m.UrlMappingsDefinition, T("Url mappings"))
                @Html.TextAreaFor(m => m.UrlMappingsDefinition, new { @class = "text singleline" })
                @Html.ValidationMessageFor(m => m.UrlMappingsDefinition)
                <span class="hint">@T("Write mappings between the path of a document folder in the repo and the root url of the corresponding document items here, separated with a colon, one per line. Sample: Folder/In/Repo: LocalRoot|Another/Folder/In/Repo: OtherLocalRoot.")</span>
            </li>
        </ol>
    </div>
</fieldset>
